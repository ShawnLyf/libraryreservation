/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libraryreservingsystem;

import java.awt.Image;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shawnlyf
 */
public class LibrarianMenu extends javax.swing.JFrame {

    ArrayList<Book> tempList=new ArrayList();
    
    boolean input=false;
    /**
     * Creates new form LibrarianMenu
     */
    public LibrarianMenu() {
        initComponents();
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ISBNArea = new javax.swing.JTextField();
        titleArea = new javax.swing.JTextField();
        authorArea = new javax.swing.JTextField();
        locationArea = new javax.swing.JTextField();
        searchArea = new javax.swing.JTextField();
        createBt = new javax.swing.JButton();
        editBt = new javax.swing.JButton();
        editBt.setVisible(false);
        deleteBt = new javax.swing.JButton();
        deleteBt.setVisible(false);
        getBt = new javax.swing.JButton();
        combo = new javax.swing.JComboBox<>();
        combo2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Author", "Location", "Status", "Borrower"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("login as ,log off");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setText("Librarian System");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        ISBNArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ISBNAreaMouseReleased(evt);
            }
        });
        ISBNArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISBNAreaActionPerformed(evt);
            }
        });

        titleArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                titleAreaMouseReleased(evt);
            }
        });

        authorArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                authorAreaMouseReleased(evt);
            }
        });

        locationArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                locationAreaMouseReleased(evt);
            }
        });

        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type somthing...");
        searchArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchAreaMouseReleased(evt);
            }
        });
        searchArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchAreaKeyReleased(evt);
            }
        });

        createBt.setText("Create");
        createBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createBtMouseClicked(evt);
            }
        });

        editBt.setText("Edit");
        editBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtMouseClicked(evt);
            }
        });

        deleteBt.setText("Delete");
        deleteBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtMouseClicked(evt);
            }
        });

        getBt.setText("Get Report");
        getBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getBtMouseClicked(evt);
            }
        });

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "available", "rented" }));

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "available", "rented" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(searchArea, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(createBt, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(editBt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(deleteBt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(getBt, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(ISBNArea, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(titleArea, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(authorArea, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(locationArea, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(combo2, 0, 92, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISBNArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createBt)
                    .addComponent(editBt)
                    .addComponent(deleteBt)
                    .addComponent(getBt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getBtMouseClicked
        // TODO add your handling code here:
        ArrayList<Book> records=new ArrayList();
        String user=searchArea.getText();
        deleteBt.setVisible(false);
        editBt.setVisible(false);
        
        if(user.equals("Type someting..."))
        {

            for(Book b: Library.bkList)
            {
                if(!b.getBorrower().equals(" "))
                {
                    records.add(b);
                }
            }
            load(records);
            generate(records);
            records.clear();
            JOptionPane.showMessageDialog(null,"Reserving records gengerated!","Error",JOptionPane.PLAIN_MESSAGE);
        }
        else
        {
            boolean has =false;

            for(Book b: Library.bkList)
            {
                if(b.getBorrower().equals(user))
                {
                    has=true;
                    records.add(b);
                }
            }
            if(has)
            {
                generate(records,user);

                records.clear();
                JOptionPane.showMessageDialog(null,"Reserving records for "+user+" gengerated!","Error",JOptionPane.PLAIN_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Don't have this user's records!","Error",JOptionPane.PLAIN_MESSAGE);
            }

        }
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");

    }//GEN-LAST:event_getBtMouseClicked

    private void deleteBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtMouseClicked
        // TODO add your handling code here:

        String ISBN=ISBNArea.getText();
        for(Book b: Library.bkList)
        {
            if(b.getISBN().equals(ISBN))
            {
                JOptionPane.showMessageDialog(null,"Book deleted!","Error",JOptionPane.PLAIN_MESSAGE);
                Library.bkList.remove(b);
                tempList.remove(b);
                clearAreas();
                write();
                if(input==false)
                {
                    load(Library.bkList);
                }
                else
                {
                    load(tempList);
                }
                break;
            }
        }
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");
        input=false;

    }//GEN-LAST:event_deleteBtMouseClicked

    private void editBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtMouseClicked
        // TODO add your handling code here:
        
        String ISBN=ISBNArea.getText();
        String title=titleArea.getText();
        String author=authorArea.getText();
        String location=locationArea.getText();
//        String status=statusArea.getText();
//        String borrower=borrowerArea.getText();
        if(!ISBN.equals("")&&!title.equals("")&&!author.equals("")&&!location.equals("")&&combo.getSelectedIndex()!=0)
        {
            if(combo.getSelectedIndex()==2&&combo2.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(null,"Please select a borrower!","Error",JOptionPane.PLAIN_MESSAGE);
            }
            else 
            { 
                for(Book b: Library.bkList)
                {
                    if(b.getISBN().equals(ISBN))
                    {
                        b.setTitle(title);
                        b.setAuthor(author);
                        b.setLocation(location);
                        b.setStatus(combo.getSelectedItem().toString());
                        b.setBorrower(combo2.getSelectedItem().toString());
                        clearAreas();
                        JOptionPane.showMessageDialog(null,"Book updated!","Error",JOptionPane.PLAIN_MESSAGE);
                        if(input==false)
                        {
                            load(Library.bkList);
                        }
                        else
                        {
                            load(tempList);
                        }
                        break;
                    }
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Invalid input!","Error",JOptionPane.PLAIN_MESSAGE);
        }
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");
        input=false;
    }//GEN-LAST:event_editBtMouseClicked

    private void createBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createBtMouseClicked
        // TODO add your handling code here:
      
        String ISBN=ISBNArea.getText();
        String title=titleArea.getText();
        String author=authorArea.getText();
        String location=locationArea.getText();
        deleteBt.setVisible(false);
        editBt.setVisible(false);      
        
        boolean have=false;

        if(!ISBN.equals("")&&!title.equals("")&&!author.equals("")&&!location.equals("")&&combo.getSelectedIndex()!=0)
        {
            if(combo.getSelectedIndex()==2&&combo2.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(null,"Please select a borrower!","Error",JOptionPane.PLAIN_MESSAGE);
            }
            else
            {               
                for(Book b: Library.bkList)
                {
                    if(b.getISBN().equals(ISBN))
                    {
                        JOptionPane.showMessageDialog(null,"ISBN already exist!","Error",JOptionPane.PLAIN_MESSAGE);
                        clearAreas();
                        have=true;
                        break;
                    }

                }
                if(have==false)
                {
                    Book newBook=new Book(ISBN,title,author,location,combo.getSelectedItem().toString(),combo2.getSelectedItem().toString());
                    JOptionPane.showMessageDialog(null,"Book Created!","Error",JOptionPane.PLAIN_MESSAGE);
                    Library.bkList.add(newBook);
                    write();
                    load(Library.bkList);
                    clearAreas();
                }
            }

            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Invalid input!","Error",JOptionPane.PLAIN_MESSAGE);
        }
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");

    }//GEN-LAST:event_createBtMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        Library.lm.setVisible(false);
        Library.mm.setVisible(true);
        Library.mm.setDefault();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");
        input=false;
        clearAreas();
        load(Library.bkList);
        deleteBt.setVisible(false);
        editBt.setVisible(false);

    }//GEN-LAST:event_jLabel1MouseClicked

    private void ISBNAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISBNAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISBNAreaActionPerformed

    private void searchAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchAreaKeyReleased
        // TODO add your handling code here:
        searchKey();
        input=true;
        load(tempList);
        deleteBt.setVisible(false);
        editBt.setVisible(false);
    }//GEN-LAST:event_searchAreaKeyReleased

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) table.getModel();
        int selectedRowIndex=table.getSelectedRow();

        ISBNArea.setText(model.getValueAt(selectedRowIndex,0).toString());
        titleArea.setText(model.getValueAt(selectedRowIndex,1).toString());
        authorArea.setText(model.getValueAt(selectedRowIndex,2).toString());
        locationArea.setText(model.getValueAt(selectedRowIndex,3).toString());
//        statusArea.setText(model.getValueAt(selectedRowIndex,4).toString());
//        borrowerArea.setText(model.getValueAt(selectedRowIndex,5).toString());
        combo.setSelectedItem(model.getValueAt(selectedRowIndex,4).toString());
        combo2.setSelectedItem(model.getValueAt(selectedRowIndex,5).toString());
        deleteBt.setVisible(true);
        editBt.setVisible(true);
        searchArea.setForeground(new java.awt.Color(204, 204, 204));
        searchArea.setText("Type someting...");
        
    }//GEN-LAST:event_tableMouseReleased

    private void searchAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchAreaMouseReleased
        // TODO add your handling code here:
        searchArea.setForeground(new java.awt.Color(0, 0, 0));
        searchArea.setText(null);
    }//GEN-LAST:event_searchAreaMouseReleased

    private void ISBNAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ISBNAreaMouseReleased
        // TODO add your handling code here:
        ISBNArea.setText(null);
    }//GEN-LAST:event_ISBNAreaMouseReleased

    private void titleAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleAreaMouseReleased
        // TODO add your handling code here:
         titleArea.setText(null);
    }//GEN-LAST:event_titleAreaMouseReleased

    private void authorAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorAreaMouseReleased
        // TODO add your handling code here:
         authorArea.setText(null);
    }//GEN-LAST:event_authorAreaMouseReleased

    private void locationAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locationAreaMouseReleased
        // TODO add your handling code here:
         locationArea.setText(null);
    }//GEN-LAST:event_locationAreaMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibrarianMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibrarianMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibrarianMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibrarianMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibrarianMenu().setVisible(true);
            }
        });
    }
    
    void load(ArrayList<Book> list)
    {
        DefaultTableModel model=(DefaultTableModel) table.getModel(); 
        model.setRowCount(0);
        for(Book b:list)
        {
            Object dataRow[] = new Object[]
            { 
                b.getISBN(),
                b.getTitle(),
                b.getAuthor(),
                b.getLocation(),
                b.getStatus(),
                b.getBorrower()
            };
            model.addRow(dataRow);           
        }
    }
    
    void searchKey(){
        tempList.clear();
        String result=searchArea.getText();
        for(Book b: Library.bkList)
        {
            if(b.getAuthor().contains(result)||b.getISBN().contains(result)||b.getTitle().contains(result)||b.getLocation().contains(result)||b.getBorrower().contains(result))
            {
                tempList.add(b);
            }           
        }
    }
    void clearAreas()
    {
        ISBNArea.setText(null);
        titleArea.setText(null);
        authorArea.setText(null);
        locationArea.setText(null);
        combo.setSelectedIndex(0);
        combo2.setSelectedIndex(0);
    }
    void write()
    {
        try 
        {
            Writer wt=new BufferedWriter(new FileWriter("Books.txt"));                               
            for (Book b : Library.bkList) 
            {
                wt.write(b.getISBN()+","+b.getTitle()+","+b.getAuthor()+","+b.getLocation()+","+b.getStatus()+","+b.getBorrower()+System.getProperty("line.separator"));
            }                
            wt.close();
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {			
            e.printStackTrace();
        } 
    }
    void generate(ArrayList<Book> list)
    {
        try 
        {
            Writer wt=new BufferedWriter(new FileWriter("Records.txt"));                               
            for (Book b : list) 
            {
                wt.write(b.getISBN()+","+b.getTitle()+","+b.getAuthor()+","+b.getLocation()+","+b.getStatus()+","+b.getBorrower()+System.getProperty("line.separator"));
            }                
            wt.close();
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {			
            e.printStackTrace();
        } 
    }
    void generate(ArrayList<Book> list,String user)
    {
        try 
        {
            Writer wt=new BufferedWriter(new FileWriter("RecordsFor "+user+".txt"));                               
            for (Book b : list) 
            {
                wt.write(b.getISBN()+","+b.getTitle()+","+b.getAuthor()+","+b.getLocation()+","+b.getStatus()+","+b.getBorrower()+System.getProperty("line.separator"));
            }                
            wt.close();
            
        } 
        catch (FileNotFoundException e) 
        {
            e.printStackTrace();
        } 
        catch (IOException e) 
        {			
            e.printStackTrace();
        } 
    }
    void showName()
    {
        jLabel2.setText("Login as "+Library.mm.getLoginName()+",Log off");
        ImageIcon iconLogo = new ImageIcon("l.png");
        Image img=iconLogo.getImage();
        Image image = img.getScaledInstance(jLabel3.getWidth(),jLabel3.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(image);
        jLabel3.setIcon(i);
        
        showList();
        
     
       

    }
     void showList()
     {
        ArrayList<String> values=new ArrayList();
        values.add(" ");
        for(User u:Library.userList)         
        {             
            if(u instanceof Student)            
            {                 
                values.add(u.getUsnm());            
            }          
        }         
        String[] valuesArr = new String[values.size()];       
        valuesArr=values.toArray(valuesArr);
        DefaultComboBoxModel model = new DefaultComboBoxModel( valuesArr );
        
        combo2.setModel(model);
     }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ISBNArea;
    private javax.swing.JTextField authorArea;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JButton createBt;
    private javax.swing.JButton deleteBt;
    private javax.swing.JButton editBt;
    private javax.swing.JButton getBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationArea;
    private javax.swing.JTextField searchArea;
    private javax.swing.JTable table;
    private javax.swing.JTextField titleArea;
    // End of variables declaration//GEN-END:variables
}
